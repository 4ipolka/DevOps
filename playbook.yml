- name: instalation for all hosts
  hosts: host01 host02
  
  tasks:
    - name: install postgreSQL
      package: 
        name: postgresql
        state: present
    - name: install psycopg
      package: 
        name: postgresql-contrib
        state: present

- name: init SQL
  hosts: host01
  tasks:
    - name: copy init file
      copy:
        src: "{{ hostvars[inventory_hostname]['dir'] }}/init.sql"
        dest: /tmp/init.sql
        mode: '0644'
    - name: change owner of the init file
      command: chown postgres:postgres /tmp/init.sql
    - name: change database name
      replace:
        path: /tmp/init.sql
        regexp: "replacedbname"
        replace: "{{ hostvars[inventory_hostname]['DB_DATABASE'] }}"
    - name: change username
      replace:
        path: /tmp/init.sql
        regexp: "replacerepluser"
        replace: "{{ hostvars[inventory_hostname]['DB_REPL_USER'] }}"
    - name: change password
      replace:
        path: /tmp/init.sql
        regexp: "replacereplpassword"
        replace: "{{ hostvars[inventory_hostname]['DB_REPL_PASSWORD'] }}"
    - name: initialize db and user
      command: psql -a -f /tmp/init.sql
      become_user: postgres

- name: repl config
  hosts: host01 
  tasks:
    - name: config
      blockinfile:
        path: "/etc/postgresql/{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}/main/postgresql.conf"
        block: |
          listen_addresses='*'
          port=5432
          max_connections=100
          unix_socket_directories='/var/run/postgresql'
          dynamic_shared_memory_type=posix
          wal_log_hints=on
          archive_command='cp %p /oracle/pg_data/archive/%f'
          max_wal_senders=10
          log_line_prefix='%m [%p] %q%u@%d '
          log_replication_commands=on
    - name: pg_hba
      blockinfile:
        path: "/etc/postgresql/{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}/main/pg_hba.conf"
        block: | 
          host replication {{ hostvars[inventory_hostname]['DB_REPL_USER'] }} {{ hostvars[inventory_hostname]['DB_REPL_HOST'] }}/24 scram-sha-256
          host all all 0.0.0.0/0 password
    - name: restart postgreSQL
      service:
        name: postgresql
        state: restarted
      
- name: do replica
  hosts: host02
  tasks:
    - name: delete dir
      command: rm -rf /var/lib/postgresql/{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}/
      become_user: root
    - name: replica
      command: pg_basebackup -h {{ hostvars[inventory_hostname]['DB_HOST'] }} -D /var/lib/postgresql/{{ hostvars[inventory_hostname]['POSTGRES_VERSION'] }}/main/ -U {{ hostvars[inventory_hostname]['DB_REPL_USER'] }} -P
      environment: 
        PGPASSWORD: "{{ hostvars[inventory_hostname]['DB_REPL_PASSWORD'] }}"
      become_user: postgres
    - name: restart postgreSQL
      service:
        name: postgresql
        state: restarted

- name: tg_bot
  hosts: host03
  tasks:
    - name: install libpq-dev
      package:
        name: libpq-dev
        state: present
    - name: install python3-dev
      package:
        name: python3-dev
        state: present
    - name: install build-essential
      package:
        name: build-essential
        state: present
    - name: install pip
      package:
        name: pip
        state: present
    - name: install git
      package:
        name: git
        state: present
    - name: git clone
      git:
        repo: "{{ hostvars[inventory_hostname]['github'] }}"
        dest: "{{ hostvars[inventory_hostname]['dir'] }}"
        version: master
    - name: pip install
      pip: 
        requirements: "{{ hostvars[inventory_hostname]['dir'] }}/requirements.txt"
    - name: finaly run bot
      command: python3 "{{ hostvars[inventory_hostname]['dir'] }}/bot.py"
      environment:
        TOKEN: "{{ hostvars[inventory_hostname]['TOKEN'] }}"
        RM_HOST: "{{ hostvars[inventory_hostname]['RM_HOST'] }}"
        RM_PORT: "{{ hostvars[inventory_hostname]['RM_PORT'] }}"
        RM_USER: "{{ hostvars[inventory_hostname]['RM_USER'] }}"
        RM_PASSWORD: "{{ hostvars[inventory_hostname]['RM_PASSWORD'] }}"
        DB_HOST: "{{ hostvars[inventory_hostname]['DB_HOST'] }}"
        DB_PORT: "{{ hostvars[inventory_hostname]['DB_PORT'] }}"
        DB_USER: "{{ hostvars[inventory_hostname]['DB_USER'] }}"
        DB_PASSWORD: "{{ hostvars[inventory_hostname]['DB_PASSWORD'] }}"
        DB_DATABASE: "{{ hostvars[inventory_hostname]['DB_DATABASE'] }}"
        DB_SSH_PASSWORD: "{{ hostvars[inventory_hostname]['DB_SSH_PASSWORD'] }}"
        DB_SSH_USER: "{{ hostvars[inventory_hostname]['DB_SSH_USER'] }}"
        DB_SSH_PORT: "{{ hostvars[inventory_hostname]['DB_SSH_PORT'] }}"