version: '3'

services:
  bot_image:
    build:
      context: .
      dockerfile: bot/Dockerfile
    container_name: bot_image
    depends_on:
      - db_image


  db_image:
    build:
      context: .
      dockerfile: db/Dockerfile
      args:
        DB_REPL_PASSWORD: ${DB_REPL_PASSWORD}
        DB_REPL_USER: ${DB_REPL_USER}
        DB_REPL_HOST: ${DB_REPL_HOST}
    container_name: db_image
    environment:
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_DATABASE}
    ports:
      - "${DB_PORT}:${DB_PORT}"


  db_repl_image:
    build:
      context: .
      dockerfile: db_repl/Dockerfile
    container_name: db_repl_image
    environment:
      POSTGRES_PASSWORD: ${DB_REPL_PASSWORD}
      POSTGRES_USER: ${DB_REPL_USER}
      DB_HOST: ${DB_HOST}
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    depends_on:
      - db_image
    command: >
      bash -c "rm -rf /var/lib/postgresql/data/* &&
               pg_basebackup -R -h db_image -U ${DB_REPL_USER} -p ${DB_PORT} -D /var/lib/postgresql/data -vP -w && chown -R postgres:postgres /var/lib/postgresql/data &&
               chmod 700 /var/lib/postgresql/data && su - postgres -c 'exec /usr/lib/postgresql/13/bin/postgres -D /var/lib/postgresql/data'"
    ports:
      - "${DB_REPL_PORT}:${DB_REPL_PORT}"

